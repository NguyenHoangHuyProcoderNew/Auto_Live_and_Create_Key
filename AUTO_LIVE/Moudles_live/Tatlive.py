# IMPORT C√ÅC TH∆Ø VI·ªÜN C·∫¶N THI·∫æT
import os
import time
import logging
import threading
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from time import sleep
import telebot
import sys
from selenium.common.exceptions import NoSuchElementException
import datetime
from selenium.common.exceptions import TimeoutException
from colorama import Fore, Style, init
from telebot import types

# C·∫•u h√¨nh API telegram
API_TOKEN = '7329003333:AAF7GhjivbGnk0jSGE8XfefFh_-shHAFsGc' # Token c·ªßa BOT
bot = telebot.TeleBot(API_TOKEN)

# C·∫•u h√¨nh Chrome driver
from Moudles_support.support_chrome_driver import chromedriver_path, dir
options = Options()
options.add_argument('--log-level=3')  # V√¥ hi·ªáu h√≥a th√¥ng b√°o c·ªßa Selenium
options.add_argument(f'--user-data-dir={dir}')

service = Service(chromedriver_path)
service_log_path = os.path.devnull
service = Service(chromedriver_path, service_log_path=service_log_path)

# Nh·∫≠p ch·ª©c nƒÉng in log ra m√†n h√¨nh
from Moudles_support.print_log import log_error, log_info, log_success

# Nh·∫≠p ch·ª©c nƒÉng bot ph·∫£n h·ªìi l·∫°i ng∆∞·ªùi d√πng
from Moudles_support.support_bot import bot_reply

# ID c·ªßa ADMIN Bot
from Moudles_support.support_bot import user_id

"""" Tr·ªü l·∫°i menu ch√≠nh """
def trolai_menuchinh(message):
    nut_menuchinh = telebot.types.ReplyKeyboardMarkup(True).add('M·ªü live', 'T·∫Øt live', 'ƒê·ªïi IP').add('Tr·ªü v·ªÅ menu ch√≠nh')
    bot.send_message(message.chat.id, "VUI L√íNG CH·ªåN üëá", reply_markup=nut_menuchinh)

"""" Y√™u c·∫ßu ng∆∞·ªùi d√πng x√°c nh·∫≠n t·∫Øt phi√™n live """
def xacnhan_tatlive(message):
    # T·∫°o n√∫t x√°c nh·∫≠n t·∫Øt live
    xacnhantatlive = telebot.types.ReplyKeyboardMarkup(True)
    xacnhantatlive.add('C√≥', 'Kh√¥ng').add('Tr·ªü l·∫°i menu ch√≠nh')
    bot.send_message(message.chat.id, "X√°c nh·∫≠n t·∫Øt phi√™n live hi·ªán t·∫°i?", reply_markup=xacnhantatlive)
    log_info(f"Bot ƒëang y√™u c·∫ßu ng∆∞·ªùi d√πng x√°c nh·∫≠n t·∫Øt phi√™n live")

    # Sau khi ng∆∞·ªùi d√πng x√°c nh·∫≠n g·ªçi h√†m main_tatlive ƒë·ªÉ x·ª≠ l√Ω
    bot.register_next_step_handler(message, xuly_tatlive)

"""" X·ª≠ l√Ω t·∫Øt live """
def xuly_tatlive(message):
    # Ki·ªÉm tra s·ª± l·ª±a ch·ªçn c·ªßa ng∆∞·ªùi d√πng
    if message.text == "C√≥":
        # Nh·∫≠p ch·ª©c nƒÉng ƒë√≥ng tr√¨nh duy·ªát Chrome driver c≈©
        from Moudles_support.support_chrome_driver import dong_chromedriver_cu

        # G·ªçi ch·ª©c nƒÉng ƒë√≥ng tr√¨nh duy·ªát Chrome driver c≈©
        bot_reply(user_id, "ƒê√≥ng c√°c phi√™n tr√¨nh duy·ªát Chrome driver c≈©")
        log_info("Ch·∫°y h√†m ƒë√≥ng c√°c phi√™n tr√¨nh duy·ªát Chrome driver c≈©")

        dong_chromedriver_cu(message) # Ch·∫°y h√†m ƒë√≥ng c√°c phi√™n tr√¨nh duy·ªát Chrome driver c≈©

        # Kh·ªüi t·∫°o Chrome driver
        driver = webdriver.Chrome(service=service, options=options)
        
        # Ki·ªÉm tra xem c√≥ truy c·∫≠p web livestream th√†nh c√¥ng hay kh√¥ng
        try:
            bot_reply(user_id, "M·ªü trang web live")
            log_info("Truy c·∫≠p v√†o trang web live")

            driver.get('https://autolive.me/tiktok')

            WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[2]/h3/b')))

            bot_reply(user_id, "M·ªü trang web live th√†nh c√¥ng")
            log_success("Truy c·∫≠p v√†o trang web live th√†nh c√¥ng")
        except TimeoutError:
            bot_reply(user_id, "M·ªü trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")
            log_error("Truy c·∫≠p v√†o trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")

            log_info("ƒê√≥ng tr√¨nh duy·ªát Chrome")
            driver.quit()

            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
            return

        # X·ª≠ l√Ω qu√° tr√¨nh t·∫Øt live
        while True:
            try:
                bot_reply(user_id, "ƒêang ƒë·ª£i n√∫t D·ª´ng live xu·∫•t hi·ªán")
                log_info("ƒê·ª£i n√∫t D·ª´ng live xu·∫•t hi·ªán")

                #  Ch·ªù n√∫t t·∫Øt phi√™n live xu·∫•t hi·ªán
                nut_dunglive = WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, "button[data-original-title='D·ª´ng live']"))
                )
                bot_reply(user_id, "N√∫t D·ª´ng live ƒë√£ xu·∫•t hi·ªán")

                # Ki·ªÉm tra Ti√™u ƒë·ªÅ c·ªßa n√∫t, n·∫øu l√† "D·ª´ng live" th√¨ m·ªõi th·ª±c hi·ªán click v√†o n√∫t ƒë·ªÉ t·∫Øt phi√™n live
                if nut_dunglive.get_attribute("data-original-title") == "D·ª´ng live":
                    nut_dunglive.click() # Click v√†o n√∫t t·∫Øt live

                    bot_reply(user_id, "Click v√†o n√∫t D·ª´ng live th√†nh c√¥ng, ƒëang ƒë·ª£i th√¥ng b√°o t·ª´ web...")
                    log_info("Click v√†o n√∫t D·ª´ng live - ƒë·ª£i th√¥ng b√°o t·ª´ web sau khi click")

                    # ƒê·ª£i th√¥ng b√°o t·ª´ web xu·∫•t hi·ªán sau khi click v√†o n√∫t t·∫Øt live
                    try:
                        # Ch·ªù th√¥ng b√°o xu·∫•t hi·ªán
                        WebDriverWait(driver, 60).until(
                            EC.presence_of_element_located((By.CSS_SELECTOR, 'div > div.notifyjs-container > div'))
                        )
                        
                        # L·∫•y n·ªôi dung c·ªßa th√¥ng b√°o
                        thongbao_tatlive = driver.execute_script('''
                        // JavaScript code here
                        // ƒêo·∫°n m√£ JavaScript ƒë·ªÉ l·∫•y n·ªôi dung c·ªßa ph·∫ßn t·ª≠
                        var element = document.querySelector('div.text[data-notify-html="text"]');
                        return element.textContent;
                    ''')
                        
                        # Ki·ªÉm tra n·ªôi dung c·ªßa th√¥ng b√°o
                        if thongbao_tatlive == "Success":
                            bot_reply(user_id, f"T·∫Øt live th√†nh c√¥ng - Th√¥ng b√°o t·ª´ web: {thongbao_tatlive}")
                            log_success(f"T·∫Øt lice th√†nh c√¥ng, th√¥ng b√°o t·ª´ web: {thongbao_tatlive}")

                            # Ki·ªÉm tra ph·∫ßn t·ª≠ Tr·∫°ng th√°i ƒë·ªÉ x√°c ƒë·ªãnh th·ªùi ƒëi·ªÉm c√≥ th·ªÉ kh·ªüi t·∫°o phi√™n live m·ªõi
                            bot_reply(user_id, "Ti·∫øn h√†nh ki·ªÉm tra Tr·∫°ng th√°i lu·ªìng live")
                            log_info("Ki·ªÉm tra Tr·∫°ng th√°i lu·ªìng live")

                            while True:
                                # L·∫•y d·ªØ li·ªáu c·ªßa ph·∫ßn t·ª≠ Tr·∫°ng th√°i
                                dulieu_trangthai = driver.find_element(By.CSS_SELECTOR, "td.text-center:nth-child(10)").text

                                # Ki·ªÉm tra ph·∫ßn t·ª≠ Tr·∫°ng th√°i
                                if dulieu_trangthai == "M·ªõi":
                                    bot_reply(user_id, "Phi√™n live ƒë√£ ƒë∆∞·ª£c t·∫Øt ho√†n to√†n, b·∫°n c√≥ th·ªÉ kh·ªüi t·∫°o phi√™n live m·ªõi ngay b√¢y gi·ªù")
                                    log_success("Phi√™n live ƒë√£ ƒë∆∞·ª£c t·∫Øt ho√†n to√†n")
                                
                                    log_info("ƒê√≥ng tr√¨nh duy·ªát Chrome")
                                    driver.quit()

                                    log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                                    return
                                else:
                                    bot_reply(user_id, f"Tr·∫°ng th√°i c·ªßa lu·ªìng live sau khi click v√†o n√∫t t·∫Øt live l√†: {dulieu_trangthai}")
                                    bot_reply(user_id, f"L√†m m·ªõi l·∫°i trang web")

                                    log_error("D·ªØ li·ªáu c·ªßa ph·∫ßn t·ª≠ Tr·∫°ng th√°i ch∆∞a h·ª£p l·ªá, l√†m m·ªõi l·∫°i trang web")

                                    # Cho l√†m m·ªõi l·∫°i trang web
                                    driver.refresh()

                                    # Ki·ªÉm tra xem c√≥ l√†m m·ªõi l·∫°i trang web livestream th√†nh c√¥ng hay kh√¥ng
                                    try:
                                        WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[2]/h3/b')))

                                        bot_reply(user_id, "L√†m m·ªõi trang web livestream th√†nh c√¥ng")
                                        log_success("L√†m m·ªõi trang web th√†nh c√¥ng")
                                    except TimeoutError:
                                        bot_reply(user_id, "L√†m m·ªõi trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")
                                        log_error("L√†m m·ªõi trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")

                                        log_info("ƒê√≥ng tr√¨nh duy·ªát Chrome")
                                        driver.quit()

                                        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                                        return        
                    except TimeoutException:
                        bot_reply(user_id, "Th√¥ng b√°o sau khi click v√†o n√∫t t·∫Øt live kh√¥ng xu·∫•t hi·ªán trong th·ªùi gian ch·ªù quy ƒë·ªãnh")
                        bot_reply(user_id, f"L√†m m·ªõi l·∫°i trang web")

                        log_error("Th√¥ng b√°o khi t·∫Øt live kh√¥ng xu·∫•t hi·ªán trong th·ªùi gian ch·ªù quy ƒë·ªãnh, l√†m m·ªõi l·∫°i trang web")

                        # Cho l√†m m·ªõi l·∫°i trang web
                        driver.refresh()

                        # Ki·ªÉm tra xem c√≥ l√†m m·ªõi l·∫°i trang web livestream th√†nh c√¥ng hay kh√¥ng
                        try:
                            WebDriverWait(driver, 100).until(EC.presence_of_element_located((By.XPATH, '/html/body/div[1]/div[3]/div/div/div[1]/div[1]/div/div[2]/h3/b')))

                            bot_reply(user_id, "L√†m m·ªõi trang web livestream th√†nh c√¥ng")
                            log_success("L√†m m·ªõi trang web th√†nh c√¥ng")
                        except TimeoutError:
                            bot_reply(user_id, "L√†m m·ªõi trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")
                            log_error("L√†m m·ªõi trang web th·∫•t b·∫°i, x·∫£y ra s·ª± c·ªë k·∫øt n·ªëi internet")

                            log_info("ƒê√≥ng tr√¨nh duy·ªát Chrome")
                            driver.quit()

                            log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                            return
            except TimeoutException:
                # Ki·ªÉm tra ph·∫ßn t·ª≠ Tr·∫°ng th√°i v√† ƒë∆∞a ra k·∫øt lu·∫≠n cu·ªëi c√πng
                try:
                    # ƒê·ª£i ph·∫ßn t·ª≠ Tr·∫°ng th√°i xu·∫•t hi·ªán
                    WebDriverWait(driver, 10).until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'td.text-center:nth-child(10)')))

                    # L·∫•y d·ªØ li·ªáu c·ªßa ph·∫ßn t·ª≠ Tr·∫°ng th√°i
                    dulieu_trangthai = driver.find_element(By.CSS_SELECTOR, "td.text-center:nth-child(10)").text

                    if dulieu_trangthai == "M·ªõi":
                        bot_reply(user_id, f"N√∫t D·ª´ng live kh√¥ng xu·∫•t hi·ªán, Tr·∫°ng th√°i lu·ªìng live l√†: {dulieu_trangthai}. B·∫°n c√≥ th·ªÉ kh·ªüi t·∫°o lu·ªìng live m·ªõi ngay b√¢y gi·ªù")
                        log_info("Hi·ªán kh√¥ng c√≥ phi√™n live n√†o ƒë∆∞·ª£c m·ªü")

                        log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
                        driver.quit()

                        log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                        return
                except TimeoutException:
                    bot_reply(user_id, "N√∫t d·ª´ng live kh√¥ng xu·∫•t hi·ªán, hi·ªán t·∫°i lu·ªìng live ƒëang tr·ªëng, c√≥ th·ªÉ kh·ªüi t·∫°o phi√™n live m·ªõi ngay b√¢y gi·ªù")
                    log_info("Hi·ªán kh√¥ng c√≥ phi√™n live n√†o ƒë∆∞·ª£c m·ªü")

                    log_info("ƒê√≥ng tr√¨nh duy·ªát chrome")
                    driver.quit()

                    log_info("K·∫øt th√∫c ti·∫øn tr√¨nh")
                    return

    elif message.text in ["Kh√¥ng", "Tr·ªü l·∫°i menu ch√≠nh"]:
        trolai_menuchinh(message)